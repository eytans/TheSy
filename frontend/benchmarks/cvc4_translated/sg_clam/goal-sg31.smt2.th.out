Collecting statistics
(leq ?__x0 ?__y1) => (or (= ?__x0 ?__y1) (less ?__x0 ?__y1))
(or (= ?__x0 ?__y1) (less ?__x0 ?__y1)) => (leq ?__x0 ?__y1)
(append nil ?x) => ?x
(append (cons ?x2 ?y) ?z) => (cons ?x2 (append ?y ?z))
(cons ?x2 (append ?y ?z)) => (append (cons ?x2 ?y) ?z)
(rev nil) => nil
nil => (rev nil)
(rev (cons ?x3 ?y)) => (append (rev ?y) (cons ?x3 nil))
(append (rev ?y) (cons ?x3 nil)) => (rev (cons ?x3 ?y))
(qreva nil ?x) => ?x
(qreva (cons ?z4 ?x) ?y) => (qreva ?x (cons ?z4 ?y))
(qreva ?x (cons ?z4 ?y)) => (qreva (cons ?z4 ?x) ?y)
(qreva (qreva ?x ?y) nil) => (append (rev ?y) ?x)
(append (rev ?y) ?x) => (qreva (qreva ?x ?y) nil)
(qreva (qreva ?x (rev ?y)) nil) => (append ?y ?x)
(append ?y ?x) => (qreva (qreva ?x (rev ?y)) nil)
(append ?autovar3 (cons ?autovar2 nil)) => (potential_split ?autovar3 (cons (param_Lst_0 ?autovar3) (param_Lst_1 ?autovar3)) nil) if Cond(var: ?autovar3, pat: (cons ?param_0 ?param_1)) Cond(var: ?autovar3, pat: nil)
(qreva ?autovar9 nil) => (potential_split ?autovar9 (cons (param_Lst_0 ?autovar9) (param_Lst_1 ?autovar9)) nil) if Cond(var: ?autovar9, pat: (cons ?param_0 ?param_1)) Cond(var: ?autovar9, pat: nil)
(qreva ?autovar9 nil) => (potential_split ?autovar9 (cons (param_Lst_0 ?autovar9) (param_Lst_1 ?autovar9)) nil) if Cond(var: ?autovar9, pat: (cons ?param_0 ?param_1)) Cond(var: ?autovar9, pat: nil)
(qreva (qreva ?autovar5 ?autovar6) ?autovar10) => (potential_split ?autovar10 (cons (param_Lst_0 ?autovar10) (param_Lst_1 ?autovar10)) nil) if Cond(var: ?autovar10, pat: (cons ?param_0 ?param_1)) Cond(var: ?autovar10, pat: nil)
(qreva (qreva ?autovar7 (rev ?autovar8)) ?autovar10) => (potential_split ?autovar10 (cons (param_Lst_0 ?autovar10) (param_Lst_1 ?autovar10)) nil) if Cond(var: ?autovar10, pat: (cons ?param_0 ?param_1)) Cond(var: ?autovar10, pat: nil)
 ex is: zero
 ex is: (succ zero)
 ex is: (succ (succ zero))
 ex is: nil
 ex is: (cons autovar_Nat_0 nil)
 ex is: (cons autovar_Nat_1 (cons autovar_Nat_0 nil))
Running TheSy on datatypes: Lst Nat dict: append rev qreva leq succ zero cons nil
01:11:27 [0m[33m[WARN] [0m# of splitters: 4
01:11:27 [0m[33m[WARN] [0m# of splitters: 4
01:11:27 [0m[33m[WARN] [0m# of splitters: 18
01:11:27 [0m[33m[WARN] [0m# of splitters: 2
01:11:27 [0m[33m[WARN] [0m# of splitters: 4
01:11:27 [0m[33m[WARN] [0m# of splitters: 11
01:11:27 [0m[33m[WARN] [0m# of splitters: 4
01:11:27 [0m[33m[WARN] [0m# of splitters: 11
01:11:27 [0m[33m[WARN] [0m# of splitters: 2
01:11:27 [0m[33m[WARN] [0m# of splitters: 47
01:11:28 [0m[33m[WARN] [0m# of splitters: 12
01:11:28 [0m[33m[WARN] [0m# of splitters: 203
01:11:30 [0m[33m[WARN] [0m# of splitters: 195
01:11:32 [0m[33m[WARN] [0m# of splitters: 182
01:11:33 [0m[33m[WARN] [0m# of splitters: 182
01:11:33 [0m[33m[WARN] [0m# of splitters: 182
01:11:33 [0m[33m[WARN] [0m# of splitters: 203
01:11:38 [0m[33m[WARN] [0m# of splitters: 163
01:11:43 [0m[33m[WARN] [0m# of splitters: 202
01:11:45 [0m[33m[WARN] [0m# of splitters: 180
01:11:45 [0m[33m[WARN] [0m# of splitters: 15
01:11:45 [0m[33m[WARN] [0m# of splitters: 44
01:11:45 [0m[33m[WARN] [0m# of splitters: 31
01:11:45 [0m[33m[WARN] [0m# of splitters: 57
01:11:45 [0m[33m[WARN] [0m# of splitters: 31
01:11:45 [0m[33m[WARN] [0m# of splitters: 20
01:11:45 [0m[33m[WARN] [0m# of splitters: 1
01:11:45 [0m[33m[WARN] [0m# of splitters: 1
01:11:45 [0m[33m[WARN] [0m# of splitters: 3
01:11:45 [0m[33m[WARN] [0m# of splitters: 10
01:11:45 [0m[33m[WARN] [0m# of splitters: 1
proved: (qreva (qreva ?ts_ph_Lst_0 nil) nil) => ?ts_ph_Lst_0
01:11:45 [0m[33m[WARN] [0mFound all lemmas
done in 18277
