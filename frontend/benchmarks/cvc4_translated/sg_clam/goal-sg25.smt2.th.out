Collecting statistics
(leq ?__x0 ?__y1) => (or (= ?__x0 ?__y1) (less ?__x0 ?__y1))
(or (= ?__x0 ?__y1) (less ?__x0 ?__y1)) => (leq ?__x0 ?__y1)
(plus zero ?n) => ?n
(plus (succ ?n) ?m) => (succ (plus ?n ?m))
(succ (plus ?n ?m)) => (plus (succ ?n) ?m)
(even zero) => true
true => (even zero)
(even (succ ?n)) => (not (even ?n))
(not (even ?n)) => (even (succ ?n))
(append nil ?x) => ?x
(append (cons ?x2 ?y) ?z) => (cons ?x2 (append ?y ?z))
(cons ?x2 (append ?y ?z)) => (append (cons ?x2 ?y) ?z)
(len nil) => zero
zero => (len nil)
(len (cons ?x3 ?y)) => (succ (len ?y))
(even (plus ?x4 ?y5)) => (even (plus ?x4 (succ (succ ?y5))))
(even (plus ?x4 (succ (succ ?y5)))) => (even (plus ?x4 ?y5))
 ex is: zero
 ex is: (succ zero)
 ex is: (succ (succ zero))
 ex is: nil
 ex is: (cons autovar_Nat_0 nil)
 ex is: (cons autovar_Nat_1 (cons autovar_Nat_0 nil))
Running TheSy on datatypes: Nat Lst dict: plus even append len leq succ zero cons nil
proved: (even (len (append ?ts_ph_Lst_0 ?ts_ph_Lst_2))) => (even (plus (len ?ts_ph_Lst_0) (len ?ts_ph_Lst_2)))
proved: (even (plus (len ?ts_ph_Lst_0) (len ?ts_ph_Lst_2))) => (even (len (append ?ts_ph_Lst_0 ?ts_ph_Lst_2)))
01:11:27 [0m[33m[WARN] [0mFound all lemmas
done in 3
