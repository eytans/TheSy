Collecting statistics
(leq ?__x0 ?__y1) => (or (= ?__x0 ?__y1) (less ?__x0 ?__y1))
(or (= ?__x0 ?__y1) (less ?__x0 ?__y1)) => (leq ?__x0 ?__y1)
(drop ?x nil) => nil
(drop zero ?x2) => ?x2
(drop (succ ?x) (cons ?y ?z)) => (drop ?x ?z)
(drop (succ ?v) (drop ?w (drop ?x (cons ?y ?z)))) => (drop ?v (drop ?w (drop ?x ?z)))
(drop (succ ?u) (drop ?v (drop (succ ?w) (cons ?x (cons ?y ?z))))) => (drop (succ ?u) (drop ?v (drop ?w (cons ?x ?z))))
(drop ?autovar18 (cons ?autovar2 ?autovar3)) => (potential_split ?autovar18 (succ (param_Nat_0 ?autovar18)) zero) if Cond(var: ?autovar18, pat: (succ ?param_0)) Cond(var: ?autovar18, pat: zero)
(drop ?autovar18 (drop ?autovar5 (drop ?autovar6 (cons ?autovar7 ?autovar8)))) => (potential_split ?autovar18 (succ (param_Nat_0 ?autovar18)) zero) if Cond(var: ?autovar18, pat: (succ ?param_0)) Cond(var: ?autovar18, pat: zero)
(drop ?autovar18 (drop ?autovar10 (drop (succ ?autovar11) (cons ?autovar12 (cons ?autovar13 ?autovar14))))) => (potential_split ?autovar18 (succ (param_Nat_0 ?autovar18)) zero) if Cond(var: ?autovar18, pat: (succ ?param_0)) Cond(var: ?autovar18, pat: zero)
(drop (succ ?autovar15) ?autovar19) => (potential_split ?autovar19 (cons (param_Lst_0 ?autovar19) (param_Lst_1 ?autovar19)) nil) if Cond(var: ?autovar19, pat: (cons ?param_0 ?param_1)) Cond(var: ?autovar19, pat: nil)
(drop (succ ?autovar16) ?autovar19) => (potential_split ?autovar19 (cons (param_Lst_0 ?autovar19) (param_Lst_1 ?autovar19)) nil) if Cond(var: ?autovar19, pat: (cons ?param_0 ?param_1)) Cond(var: ?autovar19, pat: nil)
(drop (succ ?autovar17) ?autovar19) => (potential_split ?autovar19 (cons (param_Lst_0 ?autovar19) (param_Lst_1 ?autovar19)) nil) if Cond(var: ?autovar19, pat: (cons ?param_0 ?param_1)) Cond(var: ?autovar19, pat: nil)
 ex is: zero
 ex is: (succ zero)
 ex is: (succ (succ zero))
 ex is: nil
 ex is: (cons autovar_Nat_0 nil)
 ex is: (cons autovar_Nat_1 (cons autovar_Nat_0 nil))
Running TheSy on datatypes: Nat Lst dict: drop leq succ zero cons nil
01:11:27 [0m[33m[WARN] [0m# of splitters: 2
01:11:27 [0m[33m[WARN] [0m# of splitters: 2
01:11:27 [0m[33m[WARN] [0m# of splitters: 3
01:11:27 [0m[33m[WARN] [0m# of splitters: 2
01:11:27 [0m[33m[WARN] [0m# of splitters: 2
01:11:27 [0m[33m[WARN] [0m# of splitters: 2
01:11:27 [0m[33m[WARN] [0m# of splitters: 1
01:11:27 [0m[33m[WARN] [0m# of splitters: 1
01:11:27 [0m[33m[WARN] [0m# of splitters: 1
01:11:27 [0m[33m[WARN] [0m# of splitters: 1
01:11:27 [0m[33m[WARN] [0m# of splitters: 1
proved: (drop ?ts_ph_Nat_1 (drop ?ts_ph_Nat_2 (drop ?ts_ph_Nat_3 ?ts_ph_Lst_0))) => (drop ?ts_ph_Nat_3 (drop ?ts_ph_Nat_2 (drop ?ts_ph_Nat_1 ?ts_ph_Lst_0)))
proved: (drop ?ts_ph_Nat_3 (drop ?ts_ph_Nat_2 (drop ?ts_ph_Nat_1 ?ts_ph_Lst_0))) => (drop ?ts_ph_Nat_1 (drop ?ts_ph_Nat_2 (drop ?ts_ph_Nat_3 ?ts_ph_Lst_0)))
01:11:27 [0m[33m[WARN] [0mFound all lemmas
done in 9
