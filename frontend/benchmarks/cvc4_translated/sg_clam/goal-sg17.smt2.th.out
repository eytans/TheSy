Collecting statistics
(leq ?__x0 ?__y1) => (or (= ?__x0 ?__y1) (less ?__x0 ?__y1))
(or (= ?__x0 ?__y1) (less ?__x0 ?__y1)) => (leq ?__x0 ?__y1)
(append nil ?x) => ?x
(append (cons ?x2 ?y) ?z) => (cons ?x2 (append ?y ?z))
(cons ?x2 (append ?y ?z)) => (append (cons ?x2 ?y) ?z)
(rev nil) => nil
nil => (rev nil)
(rev (cons ?x3 ?y)) => (append (rev ?y) (cons ?x3 nil))
(append (rev ?y) (cons ?x3 nil)) => (rev (cons ?x3 ?y))
(rev (append ?x (cons ?y4 nil))) => (cons ?y4 (rev ?x))
(cons ?y4 (rev ?x)) => (rev (append ?x (cons ?y4 nil)))
(append ?autovar3 (cons ?autovar2 nil)) => (potential_split ?autovar3 (cons (param_Lst_0 ?autovar3) (param_Lst_1 ?autovar3)) nil) if Cond(var: ?autovar3, pat: (cons ?param_0 ?param_1)) Cond(var: ?autovar3, pat: nil)
 ex is: zero
 ex is: (succ zero)
 ex is: (succ (succ zero))
 ex is: nil
 ex is: (cons autovar_Nat_0 nil)
 ex is: (cons autovar_Nat_1 (cons autovar_Nat_0 nil))
Running TheSy on datatypes: Nat Lst dict: append rev leq succ zero cons nil
02:11:56 [0m[33m[WARN] [0m# of splitters: 2
02:11:56 [0m[33m[WARN] [0m# of splitters: 3
02:11:56 [0m[33m[WARN] [0m# of splitters: 4
02:11:56 [0m[33m[WARN] [0m# of splitters: 9
02:11:56 [0m[33m[WARN] [0m# of splitters: 38
02:12:18 [0m[33m[WARN] [0m# of splitters: 61
02:12:20 [0m[33m[WARN] [0m# of splitters: 7
02:12:20 [0m[33m[WARN] [0m# of splitters: 36
02:12:22 [0m[33m[WARN] [0m# of splitters: 6
02:12:22 [0m[33m[WARN] [0m# of splitters: 35
02:12:31 [0m[33m[WARN] [0m# of splitters: 2
02:12:31 [0m[33m[WARN] [0m# of splitters: 1
02:12:31 [0m[33m[WARN] [0m# of splitters: 4
proved: (rev (rev (append ?ts_ph_Lst_0 ?ts_ph_Lst_2))) => (append (rev (rev ?ts_ph_Lst_0)) (rev (rev ?ts_ph_Lst_2)))
proved: (append (rev (rev ?ts_ph_Lst_0)) (rev (rev ?ts_ph_Lst_2))) => (rev (rev (append ?ts_ph_Lst_0 ?ts_ph_Lst_2)))
02:12:31 [0m[33m[WARN] [0mFound all lemmas
done in 34720
