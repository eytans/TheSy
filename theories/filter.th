;(include list)
;(include list.res)
datatype Lst () := (cons : Nat -> Lst -> Lst) (nil : Lst)

fun filter (f: (-> Nat bool) l : Lst) -> Lst
rw filter_base (filter ?p nil) => nil
rw filter_ind (filter ?p (cons ?x ?xs)) => (ite (apply ?p ?x) (cons ?x (filter ?p ?xs)) (filter ?p ?xs))