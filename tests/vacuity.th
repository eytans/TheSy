datatype boolean () := (T: ret: boolean) (F: ret: boolean)

fun And a: boolean b: boolean -> boolean => (ite (Eq ?a T) ?b F)
fun Or a: boolean b: boolean -> boolean => (ite (Eq ?a T) T ?b)
fun Not a: boolean -> boolean => (ite (Eq ?a T) F T)
fun vacuosfun a: boolean -> boolean => (ite (Eq ?a T) (Eq ?a F) T)


prove (vacuosfun v: {ph( 0 ), boolean}) = T