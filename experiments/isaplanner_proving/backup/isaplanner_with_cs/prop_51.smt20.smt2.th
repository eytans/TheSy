(datatype list () ((nil list) (cons sk list list)))
(declare-fun butlast (list) list)
(declare-fun ++ (list list) list)
(=> rule0 (butlast nil) nil)
(=> rule1 nil (butlast nil))
(=> rule2 (butlast (cons ?y nil)) nil)
(=> rule3 (butlast (cons ?y (cons ?x2 ?x3))) (cons ?y (butlast (cons ?x2 ?x3))))
(=> rule4 (cons ?y (butlast (cons ?x2 ?x3))) (butlast (cons ?y (cons ?x2 ?x3))))
(=> rule5 (++ nil ?y0) ?y0)
(=> rule6 (++ (cons ?z ?xs) ?y1) (cons ?z (++ ?xs ?y1)))
(=> rule7 (cons ?z (++ ?xs ?y1)) (++ (cons ?z ?xs) ?y1))
(prove (forall ((x sk)(xs list)) (= (butlast (++ xs (cons x nil))) xs)))
