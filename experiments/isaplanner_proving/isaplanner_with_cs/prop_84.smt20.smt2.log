08:43:24 [WARN] Collecting statistics
08:43:24 [WARN]  ex is: (pair2 autovar_sk_0 autovar_sk_1)
08:43:24 [WARN]  ex is: nil2
08:43:24 [WARN]  ex is: (cons2 autovar_sk_0 nil2)
08:43:24 [WARN]  ex is: (cons2 autovar_sk_1 (cons2 autovar_sk_0 nil2))
08:43:24 [WARN]  ex is: nil
08:43:24 [WARN]  ex is: (cons autovar_pair_0 nil)
08:43:24 [WARN]  ex is: (cons autovar_pair_1 (cons autovar_pair_0 nil))
08:43:24 [WARN]  ex is: Z
08:43:24 [WARN]  ex is: (S Z)
08:43:24 [WARN]  ex is: (S (S Z))
08:43:24 [WARN] Proof mode: false
08:43:24 [WARN]  ex is: (pair2 autovar_sk_0 autovar_sk_1)
08:43:24 [WARN]  ex is: nil2
08:43:24 [WARN]  ex is: (cons2 autovar_sk_0 nil2)
08:43:24 [WARN]  ex is: (cons2 autovar_sk_1 (cons2 autovar_sk_0 nil2))
08:43:24 [WARN]  ex is: nil
08:43:24 [WARN]  ex is: (cons autovar_pair_0 nil)
08:43:24 [WARN]  ex is: (cons autovar_pair_1 (cons autovar_pair_0 nil))
08:43:24 [WARN]  ex is: Z
08:43:24 [WARN]  ex is: (S Z)
08:43:24 [WARN]  ex is: (S (S Z))
08:43:24 [WARN] Proof mode: false
08:43:24 [WARN] proved: (++ ?ts_ph_list_0 nil) => ?ts_ph_list_0
08:43:24 [WARN] proved: (++2 ?ts_ph_list2_0 nil2) => ?ts_ph_list2_0
08:43:24 [WARN] proved: (zip ?ts_ph_list2_0 nil2) => nil
08:43:24 [WARN] proved: (drop ?ts_ph_Nat_0 nil2) => nil2
08:43:24 [WARN] proved: (take ?ts_ph_Nat_0 nil2) => nil2
08:44:12 [WARN] proved: (take (len ?ts_ph_list2_0) ?ts_ph_list2_0) => ?ts_ph_list2_0
08:44:12 [WARN] generalized case_split proof as: (++2 (++2 ?ts_ph_list2_0 ?ts_ph_list2_1) ?ts_ph_list2_2) -- (++2 ?ts_ph_list2_0 (++2 ?ts_ph_list2_1 ?ts_ph_list2_2))
08:44:12 [WARN] proved: (++2 (++2 ?ts_ph_list2_0 ?ts_ph_list2_1) ?ts_ph_list2_2) => (++2 ?ts_ph_list2_0 (++2 ?ts_ph_list2_1 ?ts_ph_list2_2))
08:44:12 [WARN] proved: (++2 ?ts_ph_list2_0 (++2 ?ts_ph_list2_1 ?ts_ph_list2_2)) => (++2 (++2 ?ts_ph_list2_0 ?ts_ph_list2_1) ?ts_ph_list2_2)
08:44:12 [WARN] proved: (zip (++2 ?ts_ph_list2_0 ?ts_ph_list2_1) ?ts_ph_list2_0) => (zip ?ts_ph_list2_0 ?ts_ph_list2_0)
08:44:12 [WARN] proved: (zip (++2 ?ts_ph_list2_0 ?ts_ph_list2_1) ?ts_ph_list2_0) => (zip ?ts_ph_list2_0 (++2 ?ts_ph_list2_0 ?ts_ph_list2_1))
08:44:12 [WARN] proved: (zip ?ts_ph_list2_0 (++2 ?ts_ph_list2_0 ?ts_ph_list2_1)) => (zip (++2 ?ts_ph_list2_0 ?ts_ph_list2_1) ?ts_ph_list2_0)
08:44:12 [WARN] proved: (drop (len ?ts_ph_list2_0) (++2 ?ts_ph_list2_0 ?ts_ph_list2_1)) => ?ts_ph_list2_1
08:44:12 [WARN] proved: (take (len ?ts_ph_list2_0) (++2 ?ts_ph_list2_0 ?ts_ph_list2_1)) => ?ts_ph_list2_0
08:44:12 [WARN] proved: (take (S Z) (++2 ?ts_ph_list2_0 ?ts_ph_list2_0)) => (take (S Z) ?ts_ph_list2_0)
08:44:12 [WARN] proved: (take (S Z) ?ts_ph_list2_0) => (take (S Z) (++2 ?ts_ph_list2_0 ?ts_ph_list2_0))
08:44:13 [WARN] generalized case_split proof as: (++ (zip ?ts_ph_list2_0 ?ts_ph_list2_0) (zip ?ts_ph_list2_1 ?ts_ph_list2_2)) -- (zip (++2 ?ts_ph_list2_0 ?ts_ph_list2_1) (++2 ?ts_ph_list2_0 ?ts_ph_list2_2))
08:44:13 [WARN] proved: (++ (zip ?ts_ph_list2_0 ?ts_ph_list2_0) (zip ?ts_ph_list2_1 ?ts_ph_list2_2)) => (zip (++2 ?ts_ph_list2_0 ?ts_ph_list2_1) (++2 ?ts_ph_list2_0 ?ts_ph_list2_2))
08:44:13 [WARN] proved: (zip (++2 ?ts_ph_list2_0 ?ts_ph_list2_1) (++2 ?ts_ph_list2_0 ?ts_ph_list2_2)) => (++ (zip ?ts_ph_list2_0 ?ts_ph_list2_0) (zip ?ts_ph_list2_1 ?ts_ph_list2_2))
08:44:13 [WARN] proved: (zip (++2 ?ts_ph_list2_0 ?ts_ph_list2_0) (cons2 ?ts_ph_sk_1 nil2)) => (zip ?ts_ph_list2_0 (cons2 ?ts_ph_sk_1 nil2))
08:44:13 [WARN] proved: (zip ?ts_ph_list2_0 (cons2 ?ts_ph_sk_1 nil2)) => (zip (++2 ?ts_ph_list2_0 ?ts_ph_list2_0) (cons2 ?ts_ph_sk_1 nil2))
08:44:13 [WARN] proved: (zip (cons2 ?ts_ph_sk_1 nil2) ?ts_ph_list2_0) => (zip (cons2 ?ts_ph_sk_1 nil2) (++2 ?ts_ph_list2_0 ?ts_ph_list2_0))
08:44:13 [WARN] proved: (zip (cons2 ?ts_ph_sk_1 nil2) (++2 ?ts_ph_list2_0 ?ts_ph_list2_0)) => (zip (cons2 ?ts_ph_sk_1 nil2) ?ts_ph_list2_0)
08:44:13 [WARN] proved: (drop ?ts_ph_Nat_1 (take ?ts_ph_Nat_1 ?ts_ph_list2_0)) => nil2
08:44:16 [WARN] proved: (++ ?ts_ph_list_0 (++ ?ts_ph_list_1 ?ts_ph_list_2)) => (++ (++ ?ts_ph_list_0 ?ts_ph_list_1) ?ts_ph_list_2)
08:44:16 [WARN] proved: (++ (++ ?ts_ph_list_0 ?ts_ph_list_1) ?ts_ph_list_2) => (++ ?ts_ph_list_0 (++ ?ts_ph_list_1 ?ts_ph_list_2))
08:44:21 [WARN] proved: (take ?ts_ph_Nat_1 ?ts_ph_list2_0) => (take ?ts_ph_Nat_1 (take ?ts_ph_Nat_1 ?ts_ph_list2_0))
08:44:21 [WARN] proved: (take ?ts_ph_Nat_1 (take ?ts_ph_Nat_1 ?ts_ph_list2_0)) => (take ?ts_ph_Nat_1 ?ts_ph_list2_0)
08:44:39 [WARN] proved: (zip ?ts_ph_list2_0 (take ?ts_ph_Nat_1 ?ts_ph_list2_0)) => (zip (take ?ts_ph_Nat_1 ?ts_ph_list2_0) ?ts_ph_list2_0)
08:44:39 [WARN] proved: (zip (take ?ts_ph_Nat_1 ?ts_ph_list2_0) ?ts_ph_list2_0) => (zip ?ts_ph_list2_0 (take ?ts_ph_Nat_1 ?ts_ph_list2_0))
08:45:05 [WARN] proved: (drop (S ?ts_ph_Nat_1) (take ?ts_ph_Nat_1 ?ts_ph_list2_0)) => nil2
08:46:38 [WARN] proved: (take ?ts_ph_Nat_1 ?ts_ph_list2_0) => (take (S ?ts_ph_Nat_1) (take ?ts_ph_Nat_1 ?ts_ph_list2_0))
08:46:38 [WARN] proved: (take (S ?ts_ph_Nat_1) (take ?ts_ph_Nat_1 ?ts_ph_list2_0)) => (take ?ts_ph_Nat_1 ?ts_ph_list2_0)
08:47:52 [WARN] proved: (drop (len ?ts_ph_list2_0) (take ?ts_ph_Nat_1 ?ts_ph_list2_0)) => nil2
08:49:58 [WARN] proved: (drop (S ?ts_ph_Nat_0) ?ts_ph_list2_1) => (drop (S Z) (drop ?ts_ph_Nat_0 ?ts_ph_list2_1))
08:49:58 [WARN] proved: (drop (S Z) (drop ?ts_ph_Nat_0 ?ts_ph_list2_1)) => (drop (S ?ts_ph_Nat_0) ?ts_ph_list2_1)
08:54:31 [WARN] proved: (take (len ?ts_ph_list2_0) (drop ?ts_ph_Nat_1 ?ts_ph_list2_0)) => (drop ?ts_ph_Nat_1 ?ts_ph_list2_0)
08:54:31 [WARN] proved: (drop ?ts_ph_Nat_1 ?ts_ph_list2_0) => (take (len ?ts_ph_list2_0) (drop ?ts_ph_Nat_1 ?ts_ph_list2_0))
09:08:19 [WARN] proved: (take (len ?ts_ph_list2_0) (take ?ts_ph_Nat_1 ?ts_ph_list2_0)) => (take ?ts_ph_Nat_1 ?ts_ph_list2_0)
09:08:19 [WARN] proved: (take ?ts_ph_Nat_1 ?ts_ph_list2_0) => (take (len ?ts_ph_list2_0) (take ?ts_ph_Nat_1 ?ts_ph_list2_0))
09:23:05 [WARN] proved: (drop ?ts_ph_Nat_0 (drop ?ts_ph_Nat_1 ?ts_ph_list2_1)) => (drop ?ts_ph_Nat_1 (drop ?ts_ph_Nat_0 ?ts_ph_list2_1))
09:23:05 [WARN] proved: (drop ?ts_ph_Nat_1 (drop ?ts_ph_Nat_0 ?ts_ph_list2_1)) => (drop ?ts_ph_Nat_0 (drop ?ts_ph_Nat_1 ?ts_ph_list2_1))
