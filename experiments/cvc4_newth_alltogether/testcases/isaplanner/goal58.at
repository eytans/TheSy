(minus (plus k m) (plus k n))
(minus m n)
(take n (append xs ys))
(append (take n xs) (take (minus n (len xs)) ys))
(take n (drop m xs))
(drop m (take (plus n m) xs))
(take zero xs)
nil
(rev (drop i xs))
(take (minus (len xs) i) (rev xs))
(minus (minus i j) k)
(minus i (plus j k))
(drop (succ n) (cons x xs))
(drop n xs)
(drop n (append xs ys))
(append (drop n xs) (drop (minus n (len xs)) ys))
(minus (minus (succ m) n) (succ k))
(minus (minus m n) k)
(less n (len xs))
(last (drop n xs))
(last xs)
(drop n (lmap xs))
(lmap (drop n xs))
(len (drop n xs))
(minus (len xs) n)
(forall ((x Nat)) (not (P x)))
(dropWhile xs)
xs
(take n (lmap xs))
(lmap (take n xs))
(ztake n (zip xs ys))
(zip (take n xs) (take n ys))
(take (succ n) (cons x xs))
(cons x (take n xs))
(rev (take i xs))
(drop (minus (len xs) i) (rev xs))
(minus (plus m n) n)
m
(drop n (drop m xs))
(drop (plus n m) xs)
(len (butlast xs))
(minus (len xs) (succ zero))
(minus n (plus n m))
zero
(minus (plus n m) n)
m
(butlast xs)
(take (minus (len xs) (succ zero)) xs)
(minus m m)
zero
(minus (minus i j) k)
(minus (minus i k) j)
(zdrop n (zip xs ys))
(zip (drop n xs) (drop n ys))
(drop zero xs)
xs
(forall ((x Nat)) (P x))
(takeWhile xs)
xs
