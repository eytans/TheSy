(minus (plus k m) (plus k n))
(minus m n)
(or (= n zero) (less n zero))
(= n zero)
(take n (drop m xs))
(drop m (take (plus n m) xs))
(or (= (len (filter xs)) (len xs)) (less (len (filter xs)) (len xs)))
(minus (minus i j) k)
(minus i (plus j k))
(sorted l)
(sorted (insort x l))
(or (= (len (delete x l)) (len l)) (less (len (delete x l)) (len l)))
(plus (count n t) (count n (cons h nil)))
(count n (cons h t))
(or (= (count n l) (count n (append l m))) (less (count n l) (count n (append l m))))
(less n (len xs))
(last (drop n xs))
(last xs)
(or (= m n) (less m n))
(or (= m (succ n)) (less m (succ n)))
(nmin a b)
(nmin b a)
(less i (succ (plus i m)))
(height (mirror a))
(height a)
(= n x)
(plus (succ zero) (count n l))
(count n (cons x l))
(plus (count n l) (count n m6))
(count n (append l m6))
(len (sort l))
(len l)
(= (nmax a b) b)
(or (= a b) (less a b))
(mem x (insort x l))
(minus (plus m n) n)
m
(or (= n (plus m n)) (less n (plus m n)))
(= (nmin a b) b)
(or (= b a) (less b a))
(drop n (drop m xs))
(drop (plus n m) xs)
(plus (count n (cons h nil)) (count n t))
(count n (cons h t))
(nmin (nmin a b) c)
(nmin a (nmin b c))
(nmax (nmax a b) c)
(nmax a (nmax b c))
(nmax a b)
(nmax b a)
(less x y)
(mem x (insort y l))
(mem x l)
(minus n (plus n m))
zero
(minus (plus n m) n)
m
(len (insort x l))
(succ (len l))
(= (nmin a b) a)
(or (= a b) (less a b))
(count x l)
(count x (sort l))
(plus (succ zero) (count n l))
(count n (cons n l))
(= (nmax a b) a)
(or (= b a) (less b a))
(not (= x y))
(mem x (insort y l))
(mem x l)
(sorted (sort l))
(less i (succ (plus m i)))
