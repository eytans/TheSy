(take n (append xs ys))
(append (take n xs) (take (minus n (len xs)) ys))
(take n (drop m xs))
(drop m (take (plus n m) xs))
(rev (drop i xs))
(take (minus (len xs) i) (rev xs))
(minus (minus i j) k)
(minus i (plus j k))
(plus (count n t) (count n (cons h nil)))
(count n (cons h t))
(drop n (append xs ys))
(append (drop n xs) (drop (minus n (len xs)) ys))
(minus (minus (succ m) n) (succ k))
(minus (minus m n) k)
(len (drop n xs))
(minus (len xs) n)
(less i (succ (plus i m)))
(rev (take i xs))
(drop (minus (len xs) i) (rev xs))
(= n x)
(plus (succ zero) (count n l))
(count n (cons x l))
(plus (count n l) (count n m6))
(count n (append l m6))
(minus (plus m n) n)
m
(or (= n (plus m n)) (less n (plus m n)))
(drop n (drop m xs))
(drop (plus n m) xs)
(plus (count n (cons h nil)) (count n t))
(count n (cons h t))
(len (butlast xs))
(minus (len xs) (succ zero))
(minus n (plus n m))
zero
(or (= n (plus n m)) (less n (plus n m)))
(minus (plus n m) n)
m
(butlast xs)
(take (minus (len xs) (succ zero)) xs)
(minus m m)
zero
(minus (minus i j) k)
(minus (minus i k) j)
(plus (succ zero) (count n l))
(count n (cons n l))
(drop n (take m xs))
(take (minus m n) (drop n xs))
(less i (succ (plus m i)))
