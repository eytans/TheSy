datatype Nat () := (succ : (x_0 : Nat) -> (res : Nat)) (zero : (res : Nat))
fun less (x_0 : Nat) (x_1 : Nat) -> Bool
fun nmax (x_0 : Nat) (x_1 : Nat) -> Nat
fun leq (__x0 : Nat) (__y1 : Nat) -> Bool => (or (= ?__x0 ?__y1) (less ?__x0 ?__y1))
rw rule0 (less ?x zero) => false
rw rule1 (less zero (succ ?x)) => true
rw rule2 (less (succ ?x) (succ ?y)) => (less ?x ?y)
rw rule3 (less ?x ?y) => (less (succ ?x) (succ ?y))
rw rule4 (nmax ?n ?m) => (ite (less ?n ?m) ?m ?n)
rw rule5 (ite (less ?n ?m) ?m ?n) => (nmax ?n ?m)
prove (= (nmax (?a : Nat) (?b : Nat)) (?b : Nat))  = (or (= (?a : Nat) (?b : Nat)) (less (?a : Nat) (?b : Nat)))
