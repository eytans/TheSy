(datatype Nat () ((succ Nat Nat) (zero Nat)))
(datatype Lst () ((cons Nat Lst Lst) (nil Lst)))
(declare-fun minus (Nat Nat) Nat)
(declare-fun len (Lst) Nat)
(declare-fun drop (Nat Lst) Lst)
(declare-fun leq (Nat Nat) Bool)
(=> rule0 (leq ?__x0 ?__y1) (or (= ?__x0 ?__y1) (less ?__x0 ?__y1)))
(=> rule1 (or (= ?__x0 ?__y1) (less ?__x0 ?__y1)) (leq ?__x0 ?__y1))
(=> rule2 (minus zero ?n) zero)
(=> rule3 (minus ?n zero) ?n)
(=> rule4 (minus (succ ?n) (succ ?m)) (minus ?n ?m))
(=> rule5 (minus ?n ?m) (minus (succ ?n) (succ ?m)))
(=> rule6 (len nil) zero)
(=> rule7 zero (len nil))
(=> rule8 (len (cons ?x ?y)) (succ (len ?y)))
(=> rule9 (drop ?x nil) nil)
(=> rule10 (drop zero ?x2) ?x2)
(=> rule11 (drop (succ ?x) (cons ?y3 ?z)) (drop ?x ?z))
(prove (forall ((xs Lst)(n Nat)) (= (len (drop n xs)) (minus (len xs) n))))
(=> "(leq zero ?ts_ph_Nat_0) => true" (leq zero ?ts_ph_Nat_0) true)
(=> "(minus ?ts_ph_Nat_0 ?ts_ph_Nat_0) => zero" (minus ?ts_ph_Nat_0 ?ts_ph_Nat_0) zero)
(=> "(drop ?ts_ph_Nat_0 (cons zero ?ts_ph_Lst_1)) => (drop ?ts_ph_Nat_0 (cons ?ts_ph_Nat_0 ?ts_ph_Lst_1))" (drop ?ts_ph_Nat_0 (cons zero ?ts_ph_Lst_1)) (drop ?ts_ph_Nat_0 (cons ?ts_ph_Nat_0 ?ts_ph_Lst_1)))
(=> "(drop ?ts_ph_Nat_0 (cons ?ts_ph_Nat_0 ?ts_ph_Lst_1)) => (drop ?ts_ph_Nat_0 (cons zero ?ts_ph_Lst_1))" (drop ?ts_ph_Nat_0 (cons ?ts_ph_Nat_0 ?ts_ph_Lst_1)) (drop ?ts_ph_Nat_0 (cons zero ?ts_ph_Lst_1)))
(=> "(leq (succ zero) (succ ?ts_ph_Nat_0)) => true" (leq (succ zero) (succ ?ts_ph_Nat_0)) true)
(=> "(len (drop ?ts_ph_Nat_0 ?ts_ph_Lst_0)) => (minus (len ?ts_ph_Lst_0) ?ts_ph_Nat_0)" (len (drop ?ts_ph_Nat_0 ?ts_ph_Lst_0)) (minus (len ?ts_ph_Lst_0) ?ts_ph_Nat_0))
(=> "(minus (len ?ts_ph_Lst_0) ?ts_ph_Nat_0) => (len (drop ?ts_ph_Nat_0 ?ts_ph_Lst_0))" (minus (len ?ts_ph_Lst_0) ?ts_ph_Nat_0) (len (drop ?ts_ph_Nat_0 ?ts_ph_Lst_0)))
(=> "(minus ?ts_ph_Nat_0 (succ ?ts_ph_Nat_0)) => zero" (minus ?ts_ph_Nat_0 (succ ?ts_ph_Nat_0)) zero)
(=> "(minus (succ ?ts_ph_Nat_0) ?ts_ph_Nat_0) => (succ zero)" (minus (succ ?ts_ph_Nat_0) ?ts_ph_Nat_0) (succ zero))
(=> "(drop (len ?ts_ph_Lst_0) ?ts_ph_Lst_0) => nil" (drop (len ?ts_ph_Lst_0) ?ts_ph_Lst_0) nil)
(=> "(minus ?ts_ph_Nat_1 (succ ?ts_ph_Nat_0)) => (minus (minus ?ts_ph_Nat_1 ?ts_ph_Nat_0) (succ zero))" (minus ?ts_ph_Nat_1 (succ ?ts_ph_Nat_0)) (minus (minus ?ts_ph_Nat_1 ?ts_ph_Nat_0) (succ zero)))
(=> "(minus (minus ?ts_ph_Nat_1 ?ts_ph_Nat_0) (succ zero)) => (minus ?ts_ph_Nat_1 (succ ?ts_ph_Nat_0))" (minus (minus ?ts_ph_Nat_1 ?ts_ph_Nat_0) (succ zero)) (minus ?ts_ph_Nat_1 (succ ?ts_ph_Nat_0)))
(=> "(minus (minus ?ts_ph_Nat_1 ?ts_ph_Nat_0) ?ts_ph_Nat_1) => zero" (minus (minus ?ts_ph_Nat_1 ?ts_ph_Nat_0) ?ts_ph_Nat_1) zero)
(=> "(drop (succ ?ts_ph_Nat_0) ?ts_ph_Lst_1) => (drop (succ zero) (drop ?ts_ph_Nat_0 ?ts_ph_Lst_1))" (drop (succ ?ts_ph_Nat_0) ?ts_ph_Lst_1) (drop (succ zero) (drop ?ts_ph_Nat_0 ?ts_ph_Lst_1)))
(=> "(drop (succ zero) (drop ?ts_ph_Nat_0 ?ts_ph_Lst_1)) => (drop (succ ?ts_ph_Nat_0) ?ts_ph_Lst_1)" (drop (succ zero) (drop ?ts_ph_Nat_0 ?ts_ph_Lst_1)) (drop (succ ?ts_ph_Nat_0) ?ts_ph_Lst_1))
(=> "(drop ?ts_ph_Nat_0 (drop ?ts_ph_Nat_1 ?ts_ph_Lst_1)) => (drop ?ts_ph_Nat_1 (drop ?ts_ph_Nat_0 ?ts_ph_Lst_1))" (drop ?ts_ph_Nat_0 (drop ?ts_ph_Nat_1 ?ts_ph_Lst_1)) (drop ?ts_ph_Nat_1 (drop ?ts_ph_Nat_0 ?ts_ph_Lst_1)))
(=> "(drop ?ts_ph_Nat_1 (drop ?ts_ph_Nat_0 ?ts_ph_Lst_1)) => (drop ?ts_ph_Nat_0 (drop ?ts_ph_Nat_1 ?ts_ph_Lst_1))" (drop ?ts_ph_Nat_1 (drop ?ts_ph_Nat_0 ?ts_ph_Lst_1)) (drop ?ts_ph_Nat_0 (drop ?ts_ph_Nat_1 ?ts_ph_Lst_1)))