(datatype Nat () ((succ Nat Nat) (zero Nat)))
(datatype Lst () ((cons Nat Lst Lst) (nil Lst)))
(datatype Pair () ((mkpair Nat Nat Pair)))
(datatype ZLst () ((zcons Pair ZLst ZLst) (znil ZLst)))
(declare-fun append (Lst Lst) Lst)
(declare-fun len (Lst) Nat)
(declare-fun rev (Lst) Lst)
(declare-fun zip (Lst Lst) ZLst)
(declare-fun zappend (ZLst ZLst) ZLst)
(declare-fun zrev (ZLst) ZLst)
(declare-fun leq (Nat Nat) Bool)
(=> rule0 (leq ?__x0 ?__y1) (or (= ?__x0 ?__y1) (less ?__x0 ?__y1)))
(=> rule1 (or (= ?__x0 ?__y1) (less ?__x0 ?__y1)) (leq ?__x0 ?__y1))
(=> rule2 (append nil ?x) ?x)
(=> rule3 (append (cons ?x2 ?y) ?z) (cons ?x2 (append ?y ?z)))
(=> rule4 (cons ?x2 (append ?y ?z)) (append (cons ?x2 ?y) ?z))
(=> rule5 (len nil) zero)
(=> rule6 zero (len nil))
(=> rule7 (len (cons ?x3 ?y)) (succ (len ?y)))
(=> rule8 (rev nil) nil)
(=> rule9 nil (rev nil))
(=> rule10 (rev (cons ?x4 ?y)) (append (rev ?y) (cons ?x4 nil)))
(=> rule11 (append (rev ?y) (cons ?x4 nil)) (rev (cons ?x4 ?y)))
(=> rule12 (zip nil ?x) znil)
(=> rule13 (zip ?x nil) znil)
(=> rule14 (zip (cons ?x5 ?y) (cons ?z6 ?w)) (zcons (mkpair ?x5 ?z6) (zip ?y ?w)))
(=> rule15 (zcons (mkpair ?x5 ?z6) (zip ?y ?w)) (zip (cons ?x5 ?y) (cons ?z6 ?w)))
(=> rule16 (zappend znil ?x7) ?x7)
(=> rule17 (zappend (zcons ?x8 ?y9) ?z10) (zcons ?x8 (zappend ?y9 ?z10)))
(=> rule18 (zcons ?x8 (zappend ?y9 ?z10)) (zappend (zcons ?x8 ?y9) ?z10))
(=> rule19 (zrev znil) znil)
(=> rule20 znil (zrev znil))
(=> rule21 (zrev (zcons ?x11 ?y12)) (zappend (zrev ?y12) (zcons ?x11 znil)))
(=> rule22 (zappend (zrev ?y12) (zcons ?x11 znil)) (zrev (zcons ?x11 ?y12)))
(prove (forall ((xs Lst)(ys Lst)) (=> (= (len xs) (len ys)) (= (zip (rev xs) (rev ys)) (zrev (zip xs ys))))))
(=> "(append ?ts_ph_Lst_0 nil) => ?ts_ph_Lst_0" (append ?ts_ph_Lst_0 nil) ?ts_ph_Lst_0)
(=> "(leq zero ?ts_ph_Nat_0) => true" (leq zero ?ts_ph_Nat_0) true)
(=> "(zappend ?ts_ph_ZLst_0 znil) => ?ts_ph_ZLst_0" (zappend ?ts_ph_ZLst_0 znil) ?ts_ph_ZLst_0)
(=> "(append ?ts_ph_Lst_0 (append ?ts_ph_Lst_1 ?ts_ph_Lst_2)) => (append (append ?ts_ph_Lst_0 ?ts_ph_Lst_1) ?ts_ph_Lst_2)" (append ?ts_ph_Lst_0 (append ?ts_ph_Lst_1 ?ts_ph_Lst_2)) (append (append ?ts_ph_Lst_0 ?ts_ph_Lst_1) ?ts_ph_Lst_2))
(=> "(append (append ?ts_ph_Lst_0 ?ts_ph_Lst_1) ?ts_ph_Lst_2) => (append ?ts_ph_Lst_0 (append ?ts_ph_Lst_1 ?ts_ph_Lst_2))" (append (append ?ts_ph_Lst_0 ?ts_ph_Lst_1) ?ts_ph_Lst_2) (append ?ts_ph_Lst_0 (append ?ts_ph_Lst_1 ?ts_ph_Lst_2)))
(=> "(zappend ?ts_ph_ZLst_0 (zappend ?ts_ph_ZLst_1 ?ts_ph_ZLst_2)) => (zappend (zappend ?ts_ph_ZLst_0 ?ts_ph_ZLst_1) ?ts_ph_ZLst_2)" (zappend ?ts_ph_ZLst_0 (zappend ?ts_ph_ZLst_1 ?ts_ph_ZLst_2)) (zappend (zappend ?ts_ph_ZLst_0 ?ts_ph_ZLst_1) ?ts_ph_ZLst_2))
(=> "(zappend (zappend ?ts_ph_ZLst_0 ?ts_ph_ZLst_1) ?ts_ph_ZLst_2) => (zappend ?ts_ph_ZLst_0 (zappend ?ts_ph_ZLst_1 ?ts_ph_ZLst_2))" (zappend (zappend ?ts_ph_ZLst_0 ?ts_ph_ZLst_1) ?ts_ph_ZLst_2) (zappend ?ts_ph_ZLst_0 (zappend ?ts_ph_ZLst_1 ?ts_ph_ZLst_2)))
(=> "(zip ?ts_ph_Lst_0 (append ?ts_ph_Lst_0 ?ts_ph_Lst_1)) => (zip ?ts_ph_Lst_0 ?ts_ph_Lst_0)" (zip ?ts_ph_Lst_0 (append ?ts_ph_Lst_0 ?ts_ph_Lst_1)) (zip ?ts_ph_Lst_0 ?ts_ph_Lst_0))
(=> "(leq (succ zero) (succ ?ts_ph_Nat_0)) => true" (leq (succ zero) (succ ?ts_ph_Nat_0)) true)
(=> "(zip (append ?ts_ph_Lst_0 ?ts_ph_Lst_0) (cons ?ts_ph_Nat_1 nil)) => (zip ?ts_ph_Lst_0 (cons ?ts_ph_Nat_1 nil))" (zip (append ?ts_ph_Lst_0 ?ts_ph_Lst_0) (cons ?ts_ph_Nat_1 nil)) (zip ?ts_ph_Lst_0 (cons ?ts_ph_Nat_1 nil)))
(=> "(zip ?ts_ph_Lst_0 (cons ?ts_ph_Nat_1 nil)) => (zip (append ?ts_ph_Lst_0 ?ts_ph_Lst_0) (cons ?ts_ph_Nat_1 nil))" (zip ?ts_ph_Lst_0 (cons ?ts_ph_Nat_1 nil)) (zip (append ?ts_ph_Lst_0 ?ts_ph_Lst_0) (cons ?ts_ph_Nat_1 nil)))
(=> "(zip (cons ?ts_ph_Nat_1 nil) (append ?ts_ph_Lst_0 ?ts_ph_Lst_0)) => (zip (cons ?ts_ph_Nat_1 nil) ?ts_ph_Lst_0)" (zip (cons ?ts_ph_Nat_1 nil) (append ?ts_ph_Lst_0 ?ts_ph_Lst_0)) (zip (cons ?ts_ph_Nat_1 nil) ?ts_ph_Lst_0))
(=> "(zip (cons ?ts_ph_Nat_1 nil) ?ts_ph_Lst_0) => (zip (cons ?ts_ph_Nat_1 nil) (append ?ts_ph_Lst_0 ?ts_ph_Lst_0))" (zip (cons ?ts_ph_Nat_1 nil) ?ts_ph_Lst_0) (zip (cons ?ts_ph_Nat_1 nil) (append ?ts_ph_Lst_0 ?ts_ph_Lst_0)))
(=> "(zip (append ?ts_ph_Lst_0 ?ts_ph_Lst_1) ?ts_ph_Lst_0) => (zip ?ts_ph_Lst_0 ?ts_ph_Lst_0)" (zip (append ?ts_ph_Lst_0 ?ts_ph_Lst_1) ?ts_ph_Lst_0) (zip ?ts_ph_Lst_0 ?ts_ph_Lst_0))
(=> "(append (rev ?ts_ph_Lst_1) (rev ?ts_ph_Lst_0)) => (rev (append ?ts_ph_Lst_0 ?ts_ph_Lst_1))" (append (rev ?ts_ph_Lst_1) (rev ?ts_ph_Lst_0)) (rev (append ?ts_ph_Lst_0 ?ts_ph_Lst_1)))
(=> "(rev (append ?ts_ph_Lst_0 ?ts_ph_Lst_1)) => (append (rev ?ts_ph_Lst_1) (rev ?ts_ph_Lst_0))" (rev (append ?ts_ph_Lst_0 ?ts_ph_Lst_1)) (append (rev ?ts_ph_Lst_1) (rev ?ts_ph_Lst_0)))
(=> "(rev (rev ?ts_ph_Lst_0)) => ?ts_ph_Lst_0" (rev (rev ?ts_ph_Lst_0)) ?ts_ph_Lst_0)
(=> "(zappend (zrev ?ts_ph_ZLst_1) (zrev ?ts_ph_ZLst_0)) => (zrev (zappend ?ts_ph_ZLst_0 ?ts_ph_ZLst_1))" (zappend (zrev ?ts_ph_ZLst_1) (zrev ?ts_ph_ZLst_0)) (zrev (zappend ?ts_ph_ZLst_0 ?ts_ph_ZLst_1)))
(=> "(zrev (zappend ?ts_ph_ZLst_0 ?ts_ph_ZLst_1)) => (zappend (zrev ?ts_ph_ZLst_1) (zrev ?ts_ph_ZLst_0))" (zrev (zappend ?ts_ph_ZLst_0 ?ts_ph_ZLst_1)) (zappend (zrev ?ts_ph_ZLst_1) (zrev ?ts_ph_ZLst_0)))
(=> "(zrev (zrev ?ts_ph_ZLst_0)) => ?ts_ph_ZLst_0" (zrev (zrev ?ts_ph_ZLst_0)) ?ts_ph_ZLst_0)
(=> "(zip (append ?ts_ph_Lst_0 ?ts_ph_Lst_1) (append ?ts_ph_Lst_0 ?ts_ph_Lst_2)) => (zappend (zip ?ts_ph_Lst_0 ?ts_ph_Lst_0) (zip ?ts_ph_Lst_1 ?ts_ph_Lst_2))" (zip (append ?ts_ph_Lst_0 ?ts_ph_Lst_1) (append ?ts_ph_Lst_0 ?ts_ph_Lst_2)) (zappend (zip ?ts_ph_Lst_0 ?ts_ph_Lst_0) (zip ?ts_ph_Lst_1 ?ts_ph_Lst_2)))
(=> "(zappend (zip ?ts_ph_Lst_0 ?ts_ph_Lst_0) (zip ?ts_ph_Lst_1 ?ts_ph_Lst_2)) => (zip (append ?ts_ph_Lst_0 ?ts_ph_Lst_1) (append ?ts_ph_Lst_0 ?ts_ph_Lst_2))" (zappend (zip ?ts_ph_Lst_0 ?ts_ph_Lst_0) (zip ?ts_ph_Lst_1 ?ts_ph_Lst_2)) (zip (append ?ts_ph_Lst_0 ?ts_ph_Lst_1) (append ?ts_ph_Lst_0 ?ts_ph_Lst_2)))
(=> "(zip (rev ?ts_ph_Lst_0) (rev ?ts_ph_Lst_0)) => (zrev (zip ?ts_ph_Lst_0 ?ts_ph_Lst_0))" (zip (rev ?ts_ph_Lst_0) (rev ?ts_ph_Lst_0)) (zrev (zip ?ts_ph_Lst_0 ?ts_ph_Lst_0)))
(=> "(zrev (zip ?ts_ph_Lst_0 ?ts_ph_Lst_0)) => (zip (rev ?ts_ph_Lst_0) (rev ?ts_ph_Lst_0))" (zrev (zip ?ts_ph_Lst_0 ?ts_ph_Lst_0)) (zip (rev ?ts_ph_Lst_0) (rev ?ts_ph_Lst_0)))