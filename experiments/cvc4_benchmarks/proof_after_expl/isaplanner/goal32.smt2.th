(datatype Nat () ((succ Nat Nat) (zero Nat)))
(declare-fun less (Nat Nat) Bool)
(declare-fun nmin (Nat Nat) Nat)
(declare-fun leq (Nat Nat) Bool)
(=> rule0 (leq ?__x0 ?__y1) (or (= ?__x0 ?__y1) (less ?__x0 ?__y1)))
(=> rule1 (or (= ?__x0 ?__y1) (less ?__x0 ?__y1)) (leq ?__x0 ?__y1))
(=> rule2 (less ?x zero) false)
(=> rule3 (less zero (succ ?x)) true)
(=> rule4 (less (succ ?x) (succ ?y)) (less ?x ?y))
(=> rule5 (less ?x ?y) (less (succ ?x) (succ ?y)))
(=> rule6 (nmin ?n ?m) (ite (less ?n ?m) ?n ?m))
(=> rule7 (ite (less ?n ?m) ?n ?m) (nmin ?n ?m))
(prove (forall ((a Nat)(b Nat)) (= (nmin a b) (nmin b a))))
(=> "(nmin zero ?ts_ph_Nat_0) => zero" (nmin zero ?ts_ph_Nat_0) zero)
(=> "(nmin ?ts_ph_Nat_0 ?ts_ph_Nat_0) => ?ts_ph_Nat_0" (nmin ?ts_ph_Nat_0 ?ts_ph_Nat_0) ?ts_ph_Nat_0)
(=> "(leq zero ?ts_ph_Nat_0) => true" (leq zero ?ts_ph_Nat_0) true)
(=> "(less ?ts_ph_Nat_0 ?ts_ph_Nat_0) => false" (less ?ts_ph_Nat_0 ?ts_ph_Nat_0) false)
(=> "(nmin ?ts_ph_Nat_0 (succ zero)) => (nmin (succ zero) ?ts_ph_Nat_0)" (nmin ?ts_ph_Nat_0 (succ zero)) (nmin (succ zero) ?ts_ph_Nat_0))
(=> "(nmin (succ zero) ?ts_ph_Nat_0) => (nmin ?ts_ph_Nat_0 (succ zero))" (nmin (succ zero) ?ts_ph_Nat_0) (nmin ?ts_ph_Nat_0 (succ zero)))
(=> "(less (succ ?ts_ph_Nat_0) ?ts_ph_Nat_0) => false" (less (succ ?ts_ph_Nat_0) ?ts_ph_Nat_0) false)
(=> "(leq (succ zero) (succ ?ts_ph_Nat_0)) => true" (leq (succ zero) (succ ?ts_ph_Nat_0)) true)
(=> "(leq (succ zero) (succ ?ts_ph_Nat_0)) => (less ?ts_ph_Nat_0 (succ ?ts_ph_Nat_0))" (leq (succ zero) (succ ?ts_ph_Nat_0)) (less ?ts_ph_Nat_0 (succ ?ts_ph_Nat_0)))
(=> "(less ?ts_ph_Nat_0 (succ ?ts_ph_Nat_0)) => (leq (succ zero) (succ ?ts_ph_Nat_0))" (less ?ts_ph_Nat_0 (succ ?ts_ph_Nat_0)) (leq (succ zero) (succ ?ts_ph_Nat_0)))