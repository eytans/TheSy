(datatype Nat () ((succ Nat Nat) (zero Nat)))
(datatype Lst () ((cons Nat Lst Lst) (nil Lst)))
(datatype Pair () ((mkpair Nat Nat Pair)))
(datatype ZLst () ((zcons Pair ZLst ZLst) (znil ZLst)))
(declare-fun drop (Nat Lst) Lst)
(declare-fun zip (Lst Lst) ZLst)
(declare-fun zdrop (Nat ZLst) ZLst)
(declare-fun leq (Nat Nat) Bool)
(=> rule0 (leq ?__x0 ?__y1) (or (= ?__x0 ?__y1) (less ?__x0 ?__y1)))
(=> rule1 (or (= ?__x0 ?__y1) (less ?__x0 ?__y1)) (leq ?__x0 ?__y1))
(=> rule2 (drop ?x nil) nil)
(=> rule3 (drop zero ?x2) ?x2)
(=> rule4 (drop (succ ?x) (cons ?y ?z)) (drop ?x ?z))
(=> rule5 (zip nil ?x3) znil)
(=> rule6 (zip ?x4 nil) znil)
(=> rule7 (zip (cons ?x ?y5) (cons ?z6 ?w)) (zcons (mkpair ?x ?z6) (zip ?y5 ?w)))
(=> rule8 (zcons (mkpair ?x ?z6) (zip ?y5 ?w)) (zip (cons ?x ?y5) (cons ?z6 ?w)))
(=> rule9 (zdrop ?x znil) znil)
(=> rule10 (zdrop zero ?x7) ?x7)
(=> rule11 (zdrop (succ ?x) (zcons ?y8 ?z9)) (zdrop ?x ?z9))
(prove (forall ((n Nat)(xs Lst)(ys Lst)) (= (zdrop n (zip xs ys)) (zip (drop n xs) (drop n ys)))))
(=> "(leq zero ?ts_ph_Nat_0) => true" (leq zero ?ts_ph_Nat_0) true)
(=> "(drop ?ts_ph_Nat_0 (cons zero ?ts_ph_Lst_1)) => (drop ?ts_ph_Nat_0 (cons ?ts_ph_Nat_0 ?ts_ph_Lst_1))" (drop ?ts_ph_Nat_0 (cons zero ?ts_ph_Lst_1)) (drop ?ts_ph_Nat_0 (cons ?ts_ph_Nat_0 ?ts_ph_Lst_1)))
(=> "(drop ?ts_ph_Nat_0 (cons ?ts_ph_Nat_0 ?ts_ph_Lst_1)) => (drop ?ts_ph_Nat_0 (cons zero ?ts_ph_Lst_1))" (drop ?ts_ph_Nat_0 (cons ?ts_ph_Nat_0 ?ts_ph_Lst_1)) (drop ?ts_ph_Nat_0 (cons zero ?ts_ph_Lst_1)))
(=> "(leq (succ zero) (succ ?ts_ph_Nat_0)) => true" (leq (succ zero) (succ ?ts_ph_Nat_0)) true)
(=> "(zdrop (succ ?ts_ph_Nat_1) ?ts_ph_ZLst_0) => (zdrop (succ zero) (zdrop ?ts_ph_Nat_1 ?ts_ph_ZLst_0))" (zdrop (succ ?ts_ph_Nat_1) ?ts_ph_ZLst_0) (zdrop (succ zero) (zdrop ?ts_ph_Nat_1 ?ts_ph_ZLst_0)))
(=> "(zdrop (succ zero) (zdrop ?ts_ph_Nat_1 ?ts_ph_ZLst_0)) => (zdrop (succ ?ts_ph_Nat_1) ?ts_ph_ZLst_0)" (zdrop (succ zero) (zdrop ?ts_ph_Nat_1 ?ts_ph_ZLst_0)) (zdrop (succ ?ts_ph_Nat_1) ?ts_ph_ZLst_0))
(=> "(zdrop ?ts_ph_Nat_1 (zdrop ?ts_ph_Nat_0 ?ts_ph_ZLst_1)) => (zdrop ?ts_ph_Nat_0 (zdrop ?ts_ph_Nat_1 ?ts_ph_ZLst_1))" (zdrop ?ts_ph_Nat_1 (zdrop ?ts_ph_Nat_0 ?ts_ph_ZLst_1)) (zdrop ?ts_ph_Nat_0 (zdrop ?ts_ph_Nat_1 ?ts_ph_ZLst_1)))
(=> "(zdrop ?ts_ph_Nat_0 (zdrop ?ts_ph_Nat_1 ?ts_ph_ZLst_1)) => (zdrop ?ts_ph_Nat_1 (zdrop ?ts_ph_Nat_0 ?ts_ph_ZLst_1))" (zdrop ?ts_ph_Nat_0 (zdrop ?ts_ph_Nat_1 ?ts_ph_ZLst_1)) (zdrop ?ts_ph_Nat_1 (zdrop ?ts_ph_Nat_0 ?ts_ph_ZLst_1)))
(=> "(drop (succ zero) (drop ?ts_ph_Nat_0 ?ts_ph_Lst_1)) => (drop (succ ?ts_ph_Nat_0) ?ts_ph_Lst_1)" (drop (succ zero) (drop ?ts_ph_Nat_0 ?ts_ph_Lst_1)) (drop (succ ?ts_ph_Nat_0) ?ts_ph_Lst_1))
(=> "(drop (succ ?ts_ph_Nat_0) ?ts_ph_Lst_1) => (drop (succ zero) (drop ?ts_ph_Nat_0 ?ts_ph_Lst_1))" (drop (succ ?ts_ph_Nat_0) ?ts_ph_Lst_1) (drop (succ zero) (drop ?ts_ph_Nat_0 ?ts_ph_Lst_1)))
(=> "(drop ?ts_ph_Nat_0 (drop ?ts_ph_Nat_1 ?ts_ph_Lst_1)) => (drop ?ts_ph_Nat_1 (drop ?ts_ph_Nat_0 ?ts_ph_Lst_1))" (drop ?ts_ph_Nat_0 (drop ?ts_ph_Nat_1 ?ts_ph_Lst_1)) (drop ?ts_ph_Nat_1 (drop ?ts_ph_Nat_0 ?ts_ph_Lst_1)))
(=> "(drop ?ts_ph_Nat_1 (drop ?ts_ph_Nat_0 ?ts_ph_Lst_1)) => (drop ?ts_ph_Nat_0 (drop ?ts_ph_Nat_1 ?ts_ph_Lst_1))" (drop ?ts_ph_Nat_1 (drop ?ts_ph_Nat_0 ?ts_ph_Lst_1)) (drop ?ts_ph_Nat_0 (drop ?ts_ph_Nat_1 ?ts_ph_Lst_1)))
(=> "(zdrop ?ts_ph_Nat_1 (zip ?ts_ph_Lst_0 ?ts_ph_Lst_0)) => (zip (drop ?ts_ph_Nat_1 ?ts_ph_Lst_0) (drop ?ts_ph_Nat_1 ?ts_ph_Lst_0))" (zdrop ?ts_ph_Nat_1 (zip ?ts_ph_Lst_0 ?ts_ph_Lst_0)) (zip (drop ?ts_ph_Nat_1 ?ts_ph_Lst_0) (drop ?ts_ph_Nat_1 ?ts_ph_Lst_0)))
(=> "(zip (drop ?ts_ph_Nat_1 ?ts_ph_Lst_0) (drop ?ts_ph_Nat_1 ?ts_ph_Lst_0)) => (zdrop ?ts_ph_Nat_1 (zip ?ts_ph_Lst_0 ?ts_ph_Lst_0))" (zip (drop ?ts_ph_Nat_1 ?ts_ph_Lst_0) (drop ?ts_ph_Nat_1 ?ts_ph_Lst_0)) (zdrop ?ts_ph_Nat_1 (zip ?ts_ph_Lst_0 ?ts_ph_Lst_0)))