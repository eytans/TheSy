(datatype Nat () ((succ Nat Nat) (zero Nat)))
(datatype Lst () ((cons Nat Lst Lst) (nil Lst)))
(declare-fun plus (Nat Nat) Nat)
(declare-fun drop (Nat Lst) Lst)
(declare-fun leq (Nat Nat) Bool)
(=> rule0 (leq ?__x0 ?__y1) (or (= ?__x0 ?__y1) (less ?__x0 ?__y1)))
(=> rule1 (or (= ?__x0 ?__y1) (less ?__x0 ?__y1)) (leq ?__x0 ?__y1))
(=> rule2 (plus zero ?n) ?n)
(=> rule3 (plus (succ ?n) ?m) (succ (plus ?n ?m)))
(=> rule4 (succ (plus ?n ?m)) (plus (succ ?n) ?m))
(=> rule5 (drop ?x nil) nil)
(=> rule6 (drop zero ?x2) ?x2)
(=> rule7 (drop (succ ?x) (cons ?y ?z)) (drop ?x ?z))
(prove (forall ((xs Lst)(m Nat)(n Nat)) (= (drop n (drop m xs)) (drop (plus n m) xs))))
(=> "(leq zero ?ts_ph_Nat_0) => true" (leq zero ?ts_ph_Nat_0) true)
(=> "(plus ?ts_ph_Nat_0 zero) => ?ts_ph_Nat_0" (plus ?ts_ph_Nat_0 zero) ?ts_ph_Nat_0)
(=> "(plus ?ts_ph_Nat_0 (plus ?ts_ph_Nat_1 ?ts_ph_Nat_2)) => (plus (plus ?ts_ph_Nat_0 ?ts_ph_Nat_1) ?ts_ph_Nat_2)" (plus ?ts_ph_Nat_0 (plus ?ts_ph_Nat_1 ?ts_ph_Nat_2)) (plus (plus ?ts_ph_Nat_0 ?ts_ph_Nat_1) ?ts_ph_Nat_2))
(=> "(plus (plus ?ts_ph_Nat_0 ?ts_ph_Nat_1) ?ts_ph_Nat_2) => (plus ?ts_ph_Nat_0 (plus ?ts_ph_Nat_1 ?ts_ph_Nat_2))" (plus (plus ?ts_ph_Nat_0 ?ts_ph_Nat_1) ?ts_ph_Nat_2) (plus ?ts_ph_Nat_0 (plus ?ts_ph_Nat_1 ?ts_ph_Nat_2)))
(=> "(drop ?ts_ph_Nat_0 (cons zero ?ts_ph_Lst_1)) => (drop ?ts_ph_Nat_0 (cons ?ts_ph_Nat_0 ?ts_ph_Lst_1))" (drop ?ts_ph_Nat_0 (cons zero ?ts_ph_Lst_1)) (drop ?ts_ph_Nat_0 (cons ?ts_ph_Nat_0 ?ts_ph_Lst_1)))
(=> "(drop ?ts_ph_Nat_0 (cons ?ts_ph_Nat_0 ?ts_ph_Lst_1)) => (drop ?ts_ph_Nat_0 (cons zero ?ts_ph_Lst_1))" (drop ?ts_ph_Nat_0 (cons ?ts_ph_Nat_0 ?ts_ph_Lst_1)) (drop ?ts_ph_Nat_0 (cons zero ?ts_ph_Lst_1)))
(=> "(leq (succ zero) (succ ?ts_ph_Nat_0)) => true" (leq (succ zero) (succ ?ts_ph_Nat_0)) true)
(=> "(leq (succ zero) (plus ?ts_ph_Nat_0 ?ts_ph_Nat_0)) => (leq (succ zero) ?ts_ph_Nat_0)" (leq (succ zero) (plus ?ts_ph_Nat_0 ?ts_ph_Nat_0)) (leq (succ zero) ?ts_ph_Nat_0))
(=> "(leq (succ zero) ?ts_ph_Nat_0) => (leq (succ zero) (plus ?ts_ph_Nat_0 ?ts_ph_Nat_0))" (leq (succ zero) ?ts_ph_Nat_0) (leq (succ zero) (plus ?ts_ph_Nat_0 ?ts_ph_Nat_0)))
(=> "(drop (plus ?ts_ph_Nat_0 ?ts_ph_Nat_1) (cons ?ts_ph_Nat_0 ?ts_ph_Lst_1)) => (drop (plus ?ts_ph_Nat_0 ?ts_ph_Nat_1) (cons zero ?ts_ph_Lst_1))" (drop (plus ?ts_ph_Nat_0 ?ts_ph_Nat_1) (cons ?ts_ph_Nat_0 ?ts_ph_Lst_1)) (drop (plus ?ts_ph_Nat_0 ?ts_ph_Nat_1) (cons zero ?ts_ph_Lst_1)))
(=> "(drop (plus ?ts_ph_Nat_0 ?ts_ph_Nat_1) (cons zero ?ts_ph_Lst_1)) => (drop (plus ?ts_ph_Nat_0 ?ts_ph_Nat_1) (cons ?ts_ph_Nat_0 ?ts_ph_Lst_1))" (drop (plus ?ts_ph_Nat_0 ?ts_ph_Nat_1) (cons zero ?ts_ph_Lst_1)) (drop (plus ?ts_ph_Nat_0 ?ts_ph_Nat_1) (cons ?ts_ph_Nat_0 ?ts_ph_Lst_1)))
(=> "(drop ?ts_ph_Nat_0 (cons ?ts_ph_Nat_1 nil)) => (drop (plus ?ts_ph_Nat_0 ?ts_ph_Nat_0) (cons ?ts_ph_Nat_1 nil))" (drop ?ts_ph_Nat_0 (cons ?ts_ph_Nat_1 nil)) (drop (plus ?ts_ph_Nat_0 ?ts_ph_Nat_0) (cons ?ts_ph_Nat_1 nil)))
(=> "(drop (plus ?ts_ph_Nat_0 ?ts_ph_Nat_0) (cons ?ts_ph_Nat_1 nil)) => (drop ?ts_ph_Nat_0 (cons ?ts_ph_Nat_1 nil))" (drop (plus ?ts_ph_Nat_0 ?ts_ph_Nat_0) (cons ?ts_ph_Nat_1 nil)) (drop ?ts_ph_Nat_0 (cons ?ts_ph_Nat_1 nil)))
(=> "(succ (plus ?ts_ph_Nat_0 ?ts_ph_Nat_1)) => (plus ?ts_ph_Nat_0 (succ ?ts_ph_Nat_1))" (succ (plus ?ts_ph_Nat_0 ?ts_ph_Nat_1)) (plus ?ts_ph_Nat_0 (succ ?ts_ph_Nat_1)))
(=> "(plus ?ts_ph_Nat_0 (succ ?ts_ph_Nat_1)) => (succ (plus ?ts_ph_Nat_0 ?ts_ph_Nat_1))" (plus ?ts_ph_Nat_0 (succ ?ts_ph_Nat_1)) (succ (plus ?ts_ph_Nat_0 ?ts_ph_Nat_1)))
(=> "(plus ?ts_ph_Nat_0 ?ts_ph_Nat_1) => (plus ?ts_ph_Nat_1 ?ts_ph_Nat_0)" (plus ?ts_ph_Nat_0 ?ts_ph_Nat_1) (plus ?ts_ph_Nat_1 ?ts_ph_Nat_0))
(=> "(plus ?ts_ph_Nat_1 ?ts_ph_Nat_0) => (plus ?ts_ph_Nat_0 ?ts_ph_Nat_1)" (plus ?ts_ph_Nat_1 ?ts_ph_Nat_0) (plus ?ts_ph_Nat_0 ?ts_ph_Nat_1))
(=> "(drop (plus ?ts_ph_Nat_0 ?ts_ph_Nat_1) ?ts_ph_Lst_1) => (drop ?ts_ph_Nat_1 (drop ?ts_ph_Nat_0 ?ts_ph_Lst_1))" (drop (plus ?ts_ph_Nat_0 ?ts_ph_Nat_1) ?ts_ph_Lst_1) (drop ?ts_ph_Nat_1 (drop ?ts_ph_Nat_0 ?ts_ph_Lst_1)))
(=> "(drop ?ts_ph_Nat_1 (drop ?ts_ph_Nat_0 ?ts_ph_Lst_1)) => (drop (plus ?ts_ph_Nat_0 ?ts_ph_Nat_1) ?ts_ph_Lst_1)" (drop ?ts_ph_Nat_1 (drop ?ts_ph_Nat_0 ?ts_ph_Lst_1)) (drop (plus ?ts_ph_Nat_0 ?ts_ph_Nat_1) ?ts_ph_Lst_1))