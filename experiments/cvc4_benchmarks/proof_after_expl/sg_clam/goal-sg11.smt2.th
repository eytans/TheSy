(datatype Nat () ((succ Nat Nat) (zero Nat)))
(datatype Lst () ((cons Nat Lst Lst) (nil Lst)))
(declare-fun append (Lst Lst) Lst)
(declare-fun rev (Lst) Lst)
(declare-fun leq (Nat Nat) Bool)
(=> rule0 (leq ?__x0 ?__y1) (or (= ?__x0 ?__y1) (less ?__x0 ?__y1)))
(=> rule1 (or (= ?__x0 ?__y1) (less ?__x0 ?__y1)) (leq ?__x0 ?__y1))
(=> rule2 (append nil ?x) ?x)
(=> rule3 (append (cons ?x2 ?y) ?z) (cons ?x2 (append ?y ?z)))
(=> rule4 (cons ?x2 (append ?y ?z)) (append (cons ?x2 ?y) ?z))
(=> rule5 (rev nil) nil)
(=> rule6 nil (rev nil))
(=> rule7 (rev (cons ?x3 ?y)) (append (rev ?y) (cons ?x3 nil)))
(=> rule8 (append (rev ?y) (cons ?x3 nil)) (rev (cons ?x3 ?y)))
(=> rule9 (rev (append ?x (append ?y (cons ?z4 nil)))) (cons ?z4 (rev (append ?x ?y))))
(=> rule10 (cons ?z4 (rev (append ?x ?y))) (rev (append ?x (append ?y (cons ?z4 nil)))))
(=> rule11 (rev (append (append ?x (cons ?y5 nil)) nil)) (cons ?y5 (rev (append ?x nil))))
(=> rule12 (cons ?y5 (rev (append ?x nil))) (rev (append (append ?x (cons ?y5 nil)) nil)))
(prove (forall ((y Lst)(x Lst)) (= (rev (append (rev x) (rev y))) (append y x))))
(=> "(leq zero ?ts_ph_Nat_0) => true" (leq zero ?ts_ph_Nat_0) true)
(=> "(append ?ts_ph_Lst_0 nil) => ?ts_ph_Lst_0" (append ?ts_ph_Lst_0 nil) ?ts_ph_Lst_0)
(=> "(append ?ts_ph_Lst_0 (append ?ts_ph_Lst_1 ?ts_ph_Lst_2)) => (append (append ?ts_ph_Lst_0 ?ts_ph_Lst_1) ?ts_ph_Lst_2)" (append ?ts_ph_Lst_0 (append ?ts_ph_Lst_1 ?ts_ph_Lst_2)) (append (append ?ts_ph_Lst_0 ?ts_ph_Lst_1) ?ts_ph_Lst_2))
(=> "(append (append ?ts_ph_Lst_0 ?ts_ph_Lst_1) ?ts_ph_Lst_2) => (append ?ts_ph_Lst_0 (append ?ts_ph_Lst_1 ?ts_ph_Lst_2))" (append (append ?ts_ph_Lst_0 ?ts_ph_Lst_1) ?ts_ph_Lst_2) (append ?ts_ph_Lst_0 (append ?ts_ph_Lst_1 ?ts_ph_Lst_2)))
(=> "(leq (succ zero) (succ ?ts_ph_Nat_0)) => true" (leq (succ zero) (succ ?ts_ph_Nat_0)) true)
(=> "(rev (append ?ts_ph_Lst_0 ?ts_ph_Lst_1)) => (append (rev ?ts_ph_Lst_1) (rev ?ts_ph_Lst_0))" (rev (append ?ts_ph_Lst_0 ?ts_ph_Lst_1)) (append (rev ?ts_ph_Lst_1) (rev ?ts_ph_Lst_0)))
(=> "(append (rev ?ts_ph_Lst_1) (rev ?ts_ph_Lst_0)) => (rev (append ?ts_ph_Lst_0 ?ts_ph_Lst_1))" (append (rev ?ts_ph_Lst_1) (rev ?ts_ph_Lst_0)) (rev (append ?ts_ph_Lst_0 ?ts_ph_Lst_1)))
(=> "(rev (rev ?ts_ph_Lst_0)) => ?ts_ph_Lst_0" (rev (rev ?ts_ph_Lst_0)) ?ts_ph_Lst_0)